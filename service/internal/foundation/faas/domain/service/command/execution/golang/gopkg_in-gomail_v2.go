// Code generated by 'yaegi extract gopkg.in/gomail.v2'. DO NOT EDIT.

package golang

import (
	"gopkg.in/gomail.v2"
	"io"
	"reflect"
)

func init() {
	Symbols["gopkg.in/gomail.v2/gomail"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Base64":          reflect.ValueOf(gomail.Base64),
		"NewDialer":       reflect.ValueOf(gomail.NewDialer),
		"NewMessage":      reflect.ValueOf(gomail.NewMessage),
		"NewPlainDialer":  reflect.ValueOf(gomail.NewPlainDialer),
		"QuotedPrintable": reflect.ValueOf(gomail.QuotedPrintable),
		"Rename":          reflect.ValueOf(gomail.Rename),
		"Send":            reflect.ValueOf(gomail.Send),
		"SetCharset":      reflect.ValueOf(gomail.SetCharset),
		"SetCopyFunc":     reflect.ValueOf(gomail.SetCopyFunc),
		"SetEncoding":     reflect.ValueOf(gomail.SetEncoding),
		"SetHeader":       reflect.ValueOf(gomail.SetHeader),
		"SetPartEncoding": reflect.ValueOf(gomail.SetPartEncoding),
		"Unencoded":       reflect.ValueOf(gomail.Unencoded),

		// type definitions
		"Dialer":         reflect.ValueOf((*gomail.Dialer)(nil)),
		"Encoding":       reflect.ValueOf((*gomail.Encoding)(nil)),
		"FileSetting":    reflect.ValueOf((*gomail.FileSetting)(nil)),
		"Message":        reflect.ValueOf((*gomail.Message)(nil)),
		"MessageSetting": reflect.ValueOf((*gomail.MessageSetting)(nil)),
		"PartSetting":    reflect.ValueOf((*gomail.PartSetting)(nil)),
		"SendCloser":     reflect.ValueOf((*gomail.SendCloser)(nil)),
		"SendFunc":       reflect.ValueOf((*gomail.SendFunc)(nil)),
		"Sender":         reflect.ValueOf((*gomail.Sender)(nil)),

		// interface wrapper definitions
		"_SendCloser": reflect.ValueOf((*_gopkg_in_gomail_v2_SendCloser)(nil)),
		"_Sender":     reflect.ValueOf((*_gopkg_in_gomail_v2_Sender)(nil)),
	}
}

// _gopkg_in_gomail_v2_SendCloser is an interface wrapper for SendCloser type
type _gopkg_in_gomail_v2_SendCloser struct {
	IValue interface{}
	WClose func() error
	WSend  func(from string, to []string, msg io.WriterTo) error
}

func (W _gopkg_in_gomail_v2_SendCloser) Close() error {
	return W.WClose()
}
func (W _gopkg_in_gomail_v2_SendCloser) Send(from string, to []string, msg io.WriterTo) error {
	return W.WSend(from, to, msg)
}

// _gopkg_in_gomail_v2_Sender is an interface wrapper for Sender type
type _gopkg_in_gomail_v2_Sender struct {
	IValue interface{}
	WSend  func(from string, to []string, msg io.WriterTo) error
}

func (W _gopkg_in_gomail_v2_Sender) Send(from string, to []string, msg io.WriterTo) error {
	return W.WSend(from, to, msg)
}
