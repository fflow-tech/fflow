name: Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - 'dev*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
        
    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        echo "Building from ref: ${{ github.ref }}, SHA: ${{ github.sha }}"
        output_name="fflow-cli"
        if [ "$GOOS" = "windows" ]; then
          output_name="fflow-cli.exe"
        fi
        GOTOOLCHAIN=auto go build -o "dist/fflow-cli_${{ matrix.goos }}_${{ matrix.goarch }}/$output_name" service/cmd/workflow-cli/main.go
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: fflow-cli_${{ matrix.goos }}_${{ matrix.goarch }}
        path: dist/fflow-cli_${{ matrix.goos }}_${{ matrix.goarch }}
        
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v3
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist
        
    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/fflow-cli_linux_amd64/fflow-cli
          dist/fflow-cli_linux_arm64/fflow-cli
          dist/fflow-cli_darwin_amd64/fflow-cli
          dist/fflow-cli_darwin_arm64/fflow-cli
          dist/fflow-cli_windows_amd64/fflow-cli.exe 